# 파이썬 자료구조
# 파이썬 자체에서 자료구조를 제공함(리스트, 튜플, 딕셔너리)

# 리스트 : 순서가 있고 수정할 수 있는 자료구조
ice1 = "메로나"
ice2 = "바밤바"
ice3 = "누가바"
# 데이터의 개수가 몇 개 되지 않는다면 각 값으 별도의 변수로 바인딩 가능함
# 데이터 개수가 많은 경우 다른 방법이 필요하다.
iceList = ["메로나", "바밤바", "누가바"]
print(iceList[0]) # 메로나
print(iceList[1]) # 바밤바  
print(iceList[2]) # 누가바

# 인덱싱 : 파이썬은 0부터 인덱싱 가능. 첫 데이터가 0번에 위치한다.

# 리스트 슬라이싱 가능
print (iceList[0:2]) # ['메로나', '바밤바']
print (iceList[1:3]) # ['바밤바', '누가바']

# 리스트 수정 가능
# 인덱싱을 통해 새로운 값을 바인딩하면 리스트가 수정된다.
iceList[2] = "빠삐코"
print(iceList) # ['메로나', '바밤바', '빠삐코']

# 리스트 추가
# append : 리스트의 끝에 원소를 추가한다.
버킷리스트 = []
버킷리스트.append("파이썬 배우기")
버킷리스트.append("자바 배우기")
버킷리스트.append("취직하기")
print(버킷리스트) # ['파이썬 배우기', '자바 배우기', '취직하기']

# 리스트 삽입
# insert(인덱스, 원소) : 특정 위치에 원소를 삽입
버킷리스트.insert(2, "행복하게 살기")
print(버킷리스트) # ['파이썬 배우기', '자바 배우기', '행복하게 살기', '취직하기']

# 리스트 원소 삭제
# del 리스트[인덱스]
job = 1
if job == 1:
  del 버킷리스트 [3]
  print (버킷리스트) # ['파이썬 배우기', '자바 배우기', '행복하게 살기']
# 리스트에서 원소가 삭제되면 그 뒤에 위치하는 원소들이 앞으로 이동하게 된다

# 리스트확장 : 리스트 합치기
# 리스트1.extend(리스트2)
num1 = [1, 2, 3]
num2 = [4, 5, 6]
num1.extend(num2)
print(num1) # [1, 2, 3, 4, 5, 6]

# 리스트의 최댓값과 최솟값
# max(리스트) / min(리스트)
priceList = [45000,20000,12000,300]
maxPice = max(priceList)
minPrice = min(priceList)

print("최대값 :", maxPice , "/ 최소값 :", minPrice) # 최대값 : 45000 / 최소값 : 300

# 튜플
# 딕셔너리